SPRING JAVACONFIG CHANGELOG
===========================
http://springframework.org/javaconfig

Changes in version 1.0.0.m3 (2008-03-26)
--------------------------------------
* [SJC-34] Added @Import annotation to allow directly importing another @Configuration class (works like XML's <import/>)
* [SJC-81] Deprecated AnnotationApplicationContext in favor of JavaConfigApplicationContext (old naming clashed with Spring 2.5's Annotation-Driven Injection)
  [SJC-82] (NOTE: AnnotationApplicationContext will be removed completely before 1.0.0 GA release!)
* [SJC-4]  Created JavaConfigWebApplicationContext to support using JavaConfig classes directly with DispatcherServlet
* [SJC-38] Inner classes are now processed as child contexts
* [SJC-48] Overhauled documentation (several TODOs remain, will be completed in a later milestone)
* [SJC-42] Significant changes to internal packaging to eliminate cyclic dependencies
* Changed versioning scheme (1.0 -> 1.0.0) to support OSGi naming conventions.
* Numerous bug fixes and minor improvements; see release notes at
  http://jira.springframework.org/secure/ReleaseNote.jspa?projectId=10080&styleName=Html&version=10599

Changes in version 1.0-m2a (2007-05-10)
---------------------------------------
* Fixed (a confusing) documentation typo. The binary code is identical to 1.0-m2 (the reason why the jar have the same name).

Changes in version 1.0-m2 (2007-05-08)
--------------------------------------
General
* added root package org.springframework.config.java
* refactored classes and restructured packages
* moved unused/incomplete classses and packages to src/test folder

Package org.springframework.config.java.annotation
* annotation @ExternalBean added to allow injection of an already defined bean
* @Bean can forbid the overriding of the resulting bean by other bean definitions. Default is true
* @Bean.scope property was changed from the Scope enum (which was removed) to a String to allow custom scopes

Package org.springframework.config.java.annotation.aop
* added @ScopedProxy annotation, the equivalent of <aop:scoped-proxy/> tag

Package org.springframework.config.java.naming
* the method -> bean name translation is pluggable and used through out the code

Package org.springframework.config.java.process
* @Bean.metadata is translated into BeanDefinition attribute
* process returns the number of bean definitions created based on annotations
* ConfigurationProcessor#process() method refactored into #processClass(Class) and #processBean(String)
* ConfigurationProcessor constructor has changed requiring only the owning bean factory. The listener registry
as well as the naming strategy are optional (defaults are being used in case they aren't specified)
* ConfigurationProcessor implements InitializingBean to allow flexible configuration

Package org.springframework.config.java.support.cglib
* the cglib code has been improved, only one instance callback being used per processor
* the backing beanFactory is used for handling bean instances. Scopes are fully supported [SJC-9]

Package org.springframework.config.java.util
* added new package with two new utility classes: one for pasing the other for specifying Spring 2.0 default 
 scopes

Changes in version 1.0-M1 (2006-11-28)
--------------------------------------
* Initial release
