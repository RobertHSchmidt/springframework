<?xml version="1.0"?>

<project name="petclinic-javaconfig" basedir="." default="usage">

	<property name="name" value="petclinic" />

	<property name="war.dir" value="war" />
	<property name="src.dir" value="src" />
	<property name="build.dir" value="../../target/classes" />
	<property name="docs.dir" value="${war.dir}/docs" />
	<property name="webclasses.dir" value="${war.dir}/WEB-INF/classes" />
	<property name="weblib.dir" value="${war.dir}/WEB-INF/lib" />
	<property name="dist.dir" value="dist" />
	<property name="db.dir" value="db" />
	<property name="tmp.dir" value="${dist.dir}/tmp" />

	<property name="testsrc.dir" value="test" />
	<property name="testbuild.dir" value=".testclasses" />
	<property name="testreports.dir" value="junit-reports" />
	<property name="testhtml.dir" value="${testreports.dir}/html" />

	<property name="spring.root" value="../.." />

	<property file="build.properties" />


	<path id="master-classpath">
	</path>


	<path id="build-classpath">
	</path>


	<path id="test-classpath">
	</path>


	<target name="usage">

		<echo message="" />
		<echo message="PetClinic Java Config build file" />
		<echo message="------------------------------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="dist    --> Add JavaConfig files to a normal Petclinic war" />
		<echo message="clean   --> Cleanup" />
		<echo message="" />

	</target>


	<target name="dist" depends="warfile">
		<!--
			Delegate to warfile target by depending on it. dist is just to offer
			a generic target name across all Spring sample apps that may be used
			for autobuilds testing.
		-->


	</target>

	<target name="clean" description="Cleanup">
		<delete dir="${dist.dir}/tmp" />
	</target>


	<target name="warfile" description="Add JavaConfig files to the petclinic war">

		<mkdir dir="${tmp.dir}" />

		<!-- unpack jar -->
		<unjar dest="${tmp.dir}" src="dist/petclinic.war" />

		<jar destfile="${tmp.dir}/WEB-INF/lib/java-config.jar" basedir="${build.dir}" />

		<copy todir="${tmp.dir}/" overwrite="true">
			<fileset dir="${war.dir}">
				<include name="**/*" />
			</fileset>
		</copy>

		<jar destfile="${dist.dir}/petclinic-javaconfig.war" basedir="${tmp.dir}" />

		<delete dir="${dist.dir}/tmp" />
	</target>

</project>
