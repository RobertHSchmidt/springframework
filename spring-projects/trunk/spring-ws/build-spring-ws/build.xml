<?xml version="1.0"?>
<!--
  =======================================================================
  A master build file for creating a release of Spring Web Services
  =======================================================================
-->
<project name="build-spring-ws" default="release" xmlns:ivy="antlib:fr.jayasoft.ivy.ant">

  <!-- Load local and user build preferences -->
  <property file="build.properties"/>
  <property file="project.properties"/>
  <property file="${user.home}/build.properties"/>

  <!-- try to load ivy here from local lib dir, in case the user has not already dropped
  it into ant's lib dir (note that the latter copy will always take precedence).
  We will not fail as long as local lib dir exists (it may be empty) and
  ivy is in at least one of ant's lib dir or the local lib dir. -->
  <path id="ivy.lib.path">
      <fileset dir="${common.build.dir}/lib" includes="*.jar" />
  </path>

  <taskdef resource="fr/jayasoft/ivy/ant/antlib.xml" uri="antlib:fr.jayasoft.ivy.ant" classpathref="ivy.lib.path" />

  <!-- simplistic pattern for zipping up sources -->
  <selector id="project.source.zip.includes">
      <or>
          <filename name="common-build/**" />
          <and>
              <or>
                  <filename name="spring-ws/build-spring-ws/**" />
                  <filename name="spring-ws/spring-oxm/**" />
                  <filename name="spring-ws/spring-ws-core/**" />
                  <filename name="spring-ws/spring-ws-security/**" />
                  <filename name="spring-ws/spring-ws-samples/**" />
              </or>
              <and>
                  <!-- exclude core project derived artifacts -->
                  <filename name="*/*/docs/**" negate="true"/>
                  <filename name="*/*/target/**" negate="true" />
                  <filename name="*/*/build.properties" negate="true" />
                  <filename name="*/*/lib/**" negate="true" />
              </and>
              <and>
                  <!-- exclude sample project derived artifacts -->
                  <filename name="*/*/*/docs/**" negate="true"/>
                  <filename name="*/*/*/target/**" negate="true" />
                  <filename name="*/*/*/build.properties" negate="true" />
                  <filename name="*/*/*/lib/**" negate="true" />
              </and>
          </and>
      </or>
  </selector>
 
  <!--
        targets:  displays all targets suitable for developer use
  -->
  <target name="targets">
    <echo>

    Master build for Spring-WS jars.

    Please execute
      ant -p

    to see a list of all relevant targets.
    The default target is 'release'
    </echo>
  </target>
  
  <!--
        init:  initializes some common settings
  -->
  <target name="init" unless="init.done" depends="init.pre, init.post">
  </target>

  <target name="init.pre" >
      <!-- ivy will determine the right order to build oxm, ws and samples -->

      <property name="ivy.conf.dir" value="${common.build.dir}" />

      <ivy:configure file="${ivy.conf.dir}/ivyconf.xml" />

      <ivy:buildlist reference="modules">
          <fileset dir="..">
              <include name="spring-oxm/build.xml" />
              <include name="spring-ws-core/build.xml" />
              <include name="spring-ws-security/build.xml" />
              <include name="spring-ws-samples/*/build.xml" />
          </fileset>
      </ivy:buildlist>
      <tstamp>
          <format property="build.timestamp" pattern="yyyyMMddHHmmss"/>
      </tstamp>
      <tstamp>
          <format property="TSTAMPCOL" pattern="hh:mm"/>
      </tstamp>

      <!-- default the release version (used in release archive zips) to the current timestamp -->
      <property name="release.version" value="${build.timestamp}"/>

      <!-- root of build hierarchy -->
      <property name="target.dir" value="${basedir}/target"/>

      <!-- directory for release zips -->
      <property name="target.release.dir" value="${target.dir}/release"/>

      <!-- directory for javadoc -->
      <property name="target.doc.dir" value="${target.dir}/doc"/>

      <!-- directory for release zips -->
      <property name="zip.toplevel.dir" value="spring-ws-${release.version}"/>
	  <property name="release.zip" value="spring-ws-${release.version}.zip" />

      <echo message='user.dir = "${user.dir}"' />
      <echo message='ant.file = "${ant.file}"' />
      <echo message='ant.java.version = "${ant.java.version}"' />
      <echo message='release.version = "${release.version}"' />
  </target>
  
  <target name="init.post" >
    <property name="projects" value="modules"/>
	<property name="projects.names" refid="modules" />
    <property name="init.done" value="true"/>
  </target>
  
  <target name="clean" depends="init" description="Cleans all build output files from all projects">
    <delete dir="${target.dir}" />  
    <echo>projects=${projects}</echo>
    <echo>projects.names=${projects.names}</echo>
	<subant target="clean" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="clean-all" depends="init"
          description="Cleans all build output files from all projects, and also retrieved libs">
    <echo>projects=${projects}</echo>
	<subant target="clean-all" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>
  
  <target name="publish" depends="init"
          description="Calls publish targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="publish" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="dist" depends="init"
          description="Calls dist targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="dist" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>
 
  <target name="build-release-repo" depends="init" description="Builds repo of all dependencies for all projects">
	<echo>projects=${projects}</echo>
	<subant target="retrieve-to-repo" inheritall="false">
      <property name="retrieve.to.repo.dir" value="${target.dir}/repo" />
      <property name="retrieve.to.repo.pattern"
                  value="${release.repo.ivy.retrieve.pattern}" />
      <property name="retrieve.to.repo.pattern.ivy" 
                value="${release.repo.ivy.retrieve.ivy.pattern}" />
		<buildpath refid="${projects}" />
	</subant>
  </target>
	
  <target name="tests" depends="init" description="Calls test targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="tests" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="javadoc" depends="init" description="Calls javadoc targets on each project">
      <javadoc destdir="${target.doc.dir}" author="true" version="true" source="1.3"
          windowtitle="Spring Web Services API">
          <doctitle><![CDATA[<h1>Spring-Web Services 1-0 M1</h1>]]></doctitle>
          <bottom><![CDATA[<i>Copyright (c) 2005-2006 The Spring Framework Project.</i>]]></bottom>          
          <group title="Spring-WS" packages="org.springframework.ws*"/>
          <group title="Spring-OXM" packages="org.springframework.oxm*"/>
          <group title="Spring-XML" packages="org.springframework.xml*"/>
          <arg value="-breakiterator"/>
          <link href="http://java.sun.com/j2se/1.4.2/docs/api"/>
          <link href="http://java.sun.com/j2ee/1.4/docs/api"/>
          <link href="http://java.sun.com/webservices/docs/2.0/api"/>
          <link href="http://java.sun.com/webservices/docs/2.0/xws-security/api/"/>
          <link href="http://static.springframework.org/spring/docs/1.2.x/api"/>
          <link href="http://jakarta.apache.org/commons/logging/apidocs/"/>
          <link href="http://xmlbeans.apache.org/docs/2.0.0/reference"/>
          <link href="http://jibx.sourceforge.net/api"/>
          <link href="http://ws.apache.org/commons/axiom/apidocs/"/>
          <link href="http://dom4j.org/apidocs/"/>
          <link href="http://jdom.org/docs/apidocs/"/>
          <link href="http://www.xom.nu/apidocs/"/>
          <link href="http://acegisecurity.org/multiproject/acegi-security/apidocs/"/>
          <packageset dir="../spring-oxm/src/main/java" />
          <packageset dir="../spring-ws-core/src/main/java" />
          <packageset dir="../spring-ws-security/src/main/java" />
          <classpath>
              <fileset dir="../spring-oxm/lib">
                  <include name="**/*.jar"/>
                  <exclude name="**/test/*.jar"/>
              </fileset>
              <fileset dir="../spring-ws-core/lib">
                  <include name="**/*.jar"/>
                  <exclude name="**/spring-oxm.jar"/>
                  <exclude name="**/commons-logging.jar"/>
                  <exclude name="**/test/*.jar"/>
              </fileset>
              <fileset dir="../spring-ws-security/lib">
                  <include name="**/*.jar"/>
                  <exclude name="**/spring-oxm.jar"/>
                  <exclude name="**/spring-ws-core.jar"/>
                  <exclude name="**/commons-logging.jar"/>
                  <exclude name="**/test/*.jar"/>
              </fileset>
          </classpath>
      </javadoc>
  </target>
  
	<target name="doc" depends="init" description="Calls doc targets on applicable projects">
		<echo>projects=${projects}</echo>
		<subant target="doc-all" inheritall="false" failonerror="false">
			<buildpathelement location="../spring-ws-core" />
		</subant>
	</target>

  <target name="release"
          depends="dist, build-release-repo, javadoc, doc, gen.release.zip"
          description="Generate the spring-ws release archive">
  </target>

  <target name="gen.release.zip" depends="init">
		<mkdir dir="${target.release.dir}" />
		<delete file="${target.release.dir}/${release.zip}" />

		<zip zipfile="${target.release.dir}/${release.zip}">
			<!-- important readme, license, and other text files -->
			<zipfileset file="../spring-ws-core/*.txt" prefix="${zip.toplevel.dir}" />
			<!-- binary files -->
			<zipfileset dir="../spring-ws-core/target/dist/jars" prefix="${zip.toplevel.dir}" />
			<zipfileset dir="../spring-ws-security/target/dist/jars" prefix="${zip.toplevel.dir}" />
			<zipfileset dir="../spring-oxm/target/dist/jars" prefix="${zip.toplevel.dir}" />
			<zipfileset dir="${target.doc.dir}" prefix="${zip.toplevel.dir}/docs/api" />
			<zipfileset dir="../spring-ws-core/docs/reference/target" prefix="${zip.toplevel.dir}/docs/reference">
				<exclude name="**/html_single/**" />
			</zipfileset>
			<zipfileset dir="${target.dir}/repo" 
			            prefix="${zip.toplevel.dir}/projects/repository" />
			<!-- project sources -->
			<zipfileset dir="../.." prefix="${zip.toplevel.dir}/projects">
				<selector refid="project.source.zip.includes" />
			</zipfileset>
		</zip>
	</target>
  
</project>