<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       	http://www.springframework.org/schema/aop
 		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<!-- The tasklet used in this job will run in an infinite loop.  This is useful for testing graceful shutdown from
		multiple environments. -->

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor">
			<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
		</property>
	</bean>

	<bean id="infiniteLoopJob" parent="simpleJob">
		<property name="steps">
			<!--bean id="step1" parent="taskletStep">
				<property name="tasklet">
					<bean id="module" class="org.springframework.batch.sample.tasklet.InfiniteLoopTasklet"/>
				</property>
			</bean-->
			<bean id="infiniteStep" parent="simpleStep">
				<property name="itemReader">
					<bean id="reader" class="org.springframework.batch.sample.item.reader.InfiniteItemReader" />
				</property>
				<property name="itemWriter">
					<bean id="writer" class="org.springframework.batch.sample.item.writer.DummyItemWriter" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="jobInterruptAdvice" class="org.springframework.batch.sample.advice.DefaultJobInterruptionAdvice" />
	
	<aop:config>
		<aop:aspect id="interruptChecker" ref="jobInterruptAdvice" >
			
			<aop:after-returning method="setJobExecution"
				pointcut="execution(* org.springframework.batch.core.repository.JobRepository.createJobExecution(..))" 
				returning="jobExecution" />
			
			<aop:before method="checkInterrupt" 
				pointcut="execution(* org.springframework.batch.repeat.RepeatOperations.iterate(..))"/>
				
		</aop:aspect>
	 </aop:config>

</beans>