<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       	http://www.springframework.org/schema/aop
 		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<!-- The tasklet used in this job will run in an infinite loop.  This is useful for testing graceful shutdown from
		multiple environments. -->

	<bean parent="stepScope" />
	<bean parent="jobConfigurationRegistryBeanPostProcessor" />

	<bean id="loopJob" parent="simpleJob">
		<property name="steps">
			<bean id="step1" parent="taskletStep">
				<property name="tasklet">
					<bean id="module"
						class="org.springframework.batch.sample.tasklet.InfiniteLoopTasklet"/>
				</property>
				<property name="listener">
					<bean
						class="org.springframework.batch.repeat.interceptor.ApplicationEventPublisherRepeatListener" />
				</property>
			</bean>
		</property>
	</bean>

	<bean class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="spring:service=batch,bean=jobLauncher">
					<bean
						class="org.springframework.batch.execution.bootstrap.support.SimpleExportedJobLauncher">
						<property name="launcher" ref="jobLauncher" />
						<property name="jobLocator"
							ref="jobConfigurationRegistry" />
					</bean>
				</entry>
				<entry
					key="spring:service=batch,bean=notificationPublisher"
					value-ref="notificationPublisher" />
				<entry
					key="spring:service=batch,bean=configurationLoader">
					<bean
						class="org.springframework.aop.framework.ProxyFactoryBean">
						<property name="target" ref="loader" />
						<property name="interfaces">
							<list>
								<value>
									org.springframework.batch.sample.ExportedJobLoader
								</value>
							</list>
						</property>
						<property name="interceptorNames"
							value="convertingMethodInterceptor" />
					</bean>
				</entry>
			</map>
		</property>
		<property name="assembler">
			<bean
				class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
				<property name="interfaceMappings">
					<map>
						<entry
							key="spring:service=batch,bean=jobLauncher"
							value="org.springframework.batch.execution.bootstrap.support.ExportedJobLauncher" />
						<entry key="spring:service=batch,bean=jobLoader"
							value="org.springframework.batch.sample.JobLoader" />
					</map>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="notificationPublisher"
		class="org.springframework.batch.execution.bootstrap.JobExecutionNotificationPublisher" />

	<bean id="logAdvice"
		class="org.springframework.batch.sample.advice.MethodExecutionLogAdvice" />

	<aop:config>
		<aop:aspect ref="logAdvice">

			<aop:after
				pointcut="execution( * org.springframework.batch.sample..InfiniteLoopTasklet+.execute(..))"
				method="doBasicLogging" />

		</aop:aspect>
	</aop:config>

	<bean id="jobLauncher"
		class="org.springframework.batch.execution.launch.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor">
			<bean
				class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
		</property>
	</bean>

	<bean id="loader"
		class="org.springframework.batch.sample.DefaultJobLoader">
		<property name="registry" ref="jobConfigurationRegistry" />
	</bean>

</beans>
