<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
	<description>
		Showcases reading and writing of headers and footers. Copies header from input to output and adds a footer.
	</description>
	<bean id="headerFooterSample" parent="simpleJob">
		<property name="steps">
			<bean id="step1" parent="simpleStep" p:commitInterval="3">
				<property name="streams">
					<list>
						<!--
							explicit registration to enforce ordering (header needs to be
							read before it can be written)
						-->
						<ref bean="reader" />
						<ref bean="writer" />
					</list>
				</property>
				<property name="listeners" ref="footerCallback" />
				<property name="itemReader" ref="reader" />
				<property name="itemWriter" ref="writer" />
			</bean>
		</property>
	</bean>
	<bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" ref="inputResource" />
		<property name="lineTokenizer">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="delimiter" value="," />
			</bean>
		</property>
		<property name="fieldSetMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
		</property>
		<property name="headerCallback" ref="headerCopier" />
		<property name="firstLineIsHeader" value="true" />
	</bean>
	<bean id="writer" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" ref="outputResource" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
		<property name="headerCallback" ref="headerCopier" />
		<property name="footerCallback" ref="footerCallback" />
	</bean>
	<bean id="footerCallback" class="org.springframework.batch.sample.support.SummaryFooterCallback" />
	<bean id="headerCopier"
		class="org.springframework.batch.sample.support.HeaderCopyCallback" />
	<bean id="inputResource" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg type="java.lang.String"
			value="data/headerFooterSample/input.txt" />
	</bean>
	<bean id="outputResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg type="java.lang.String"
			value="target/test-outputs/headerFooterOutput.txt" />
	</bean>
</beans>