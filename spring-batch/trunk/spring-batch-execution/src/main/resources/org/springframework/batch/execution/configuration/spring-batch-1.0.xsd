<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.springframework.org/schema/batch"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.springframework.org/schema/batch"
	elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">

	<xs:element name="config">
		<xs:annotation>
			<xs:documentation><![CDATA[Defines a configuration for a batch job or a group of batch jobs.  This encapsulating element sets the default configuration for all jobs and steps defined inside.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="job-repository" type="jobRepositoryType" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation><![CDATA[Defines a repository for storing and retrieving metadata for jobs and steps.]]></xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="job" type="jobType" minOccurs="1" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation><![CDATA[Defines a uniquely identified job that is referenced at runtime.]]></xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- Types -->
	<xs:complexType name="jobRepositoryType">
		<xs:attribute name="data-source" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The datasource to use to back this repository.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="db-type" use="required">
			<xs:annotation>
			<xs:documentation><![CDATA[The type of database this job repository will be communicating with.]]></xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:enumeration value="db2"/>
					<xs:enumeration value="derby"/>
					<xs:enumeration value="hsql"/>
					<xs:enumeration value="mysql"/>
					<xs:enumeration value="oracle"/>
					<xs:enumeration value="postgres"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="jobType">
 		<xs:choice minOccurs="1" maxOccurs="unbounded">
			<xs:element name="step" type="stepType">
				<xs:annotation>
					<xs:documentation><![CDATA[Defines a step that supports chunking]]></xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tasklet-step" type="taskletStepType">
				<xs:annotation>
					<xs:documentation><![CDATA[Defines a step that executes a tasklet]]></xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="id" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The unique identifier to use in this step.  The id must be unique within the context of this job.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	 <xs:complexType name="stepType">
		<xs:attribute name="id" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The unique identifier to use in this step.  The id must be unique within the context of this job.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="size" type="xs:positiveInteger" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The number of elements to be processed per chunk. This must be a number greater than 0.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="item-reader" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The id of the ItemReader implementation to read from in this step]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="item-writer" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The id of the ItemWriter implementation to write to in this step]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="transaction-manager" type="xs:token" use="optional"
			default="transactionManager">
			<xs:annotation>
				<xs:documentation><![CDATA[The id of the transaction manager to use in this step.  This should be an implementation of Spring's PlatformTransactionManager.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="rerun.enum"/>
		<xs:attribute name="input-skip-limit" type="xs:nonNegativeInteger" use="optional">
			<xs:annotation>
				<xs:documentation><![CDATA[The maximum number of items the ItemReader can skip before this step is marked as a failure.  The default is no limit.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="output-skip-limit" type="xs:nonNegativeInteger" use="optional">
			<xs:annotation>
				<xs:documentation><![CDATA[The maximum number of items the ItemWriter can skip before this step is marked as a failure.  The default is no limit.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="taskletStepType">
		<xs:attribute name="id" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The unique identifier to use in this step.  The id must be unique within the context of this job.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="tasklet" type="xs:token" use="required">
			<xs:annotation>
				<xs:documentation><![CDATA[The id of the Tasklet implementation to execute in this step.]]></xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="rerun.enum"/>
	</xs:complexType>

	<!-- Enumerations -->
<xs:attributeGroup name="rerun.enum">
		<xs:attribute name="rerun" use="optional" default="incomplete">
			<xs:annotation>
				<xs:documentation><![CDATA[When to re-run this step.  The default is 'incomplete.
  * always:     Always re-run this step
  * never:      Never re-run this step
  * incomplete: Re-run this step whenever a previous execution was incomplete]]></xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:enumeration value="always"/>
					<xs:enumeration value="never"/>
					<xs:enumeration value="incomplete"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
</xs:schema>
