<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       	http://www.springframework.org/schema/aop
 		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<!-- The module used in this job will run in an infinite loop.  This is useful for testing graceful shutdown from
		multiple environments. -->

	<import resource="../simple-container-definition.xml" />

	<bean
		class="org.springframework.batch.execution.configuration.JobConfigurationRegistryBeanPostProcessor">
		<property name="jobConfigurationRegistry" ref="jobConfigurationRegistry" />
	</bean>

	<bean id="batchContainerOverride" parent="batchContainer">
		<property name="jobExecutor">
			<bean parent="jobExecutor">
				<property name="stepExecutorResolver">
					<bean
						class="org.springframework.batch.execution.step.DefaultStepExecutorFactory">
						<property name="stepExecutorName" value="notifyingStepExecutor" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="batchBootstrap"
		class="org.springframework.batch.execution.bootstrap.TaskExecutorJobLauncher">
		<property name="batchContainer" ref="batchContainerOverride" />
		<property name="taskExecutor">
			<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
		</property>
		<property name="autoStart" value="false" />
	</bean>

	<bean id="jobConfiguration" parent="simpleJob">
		<property name="steps">
			<bean id="step1" parent="simpleStep">
				<constructor-arg>
					<bean id="module" class="org.springframework.batch.sample.module.InfiniteLoopTasklet" scope="step">
						<aop:scoped-proxy />
					</bean>
				</constructor-arg>
				<property name="commitInterval" value="2" />
			</bean>
		</property>
	</bean>

	<bean id="notifyingStepExecutor" parent="stepExecutor" scope="prototype">
		<property name="stepOperations">
			<bean class="org.springframework.batch.repeat.support.RepeatTemplate">
				<property name="interceptor">
					<bean
						class="org.springframework.batch.repeat.interceptor.ApplicationEventPublisherRepeatInterceptor" />
				</property>
			</bean>
		</property>
	</bean>

	<bean class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="spring:service=lifecycle,bean=batchBootstrap">
					<ref bean="batchBootstrap" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="logAdvice" class="org.springframework.batch.sample.advice.MethodExecutionLogAdvice" />

	<aop:config>
		<aop:aspect ref="logAdvice">

			<aop:after pointcut="execution( * org.springframework.batch.sample..InfiniteLoopTasklet+.execute(..))"
				method="doBasicLogging" />

		</aop:aspect>
	</aop:config>

</beans>