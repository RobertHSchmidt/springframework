<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<bean class="org.springframework.batch.execution.configuration.JobConfigurationRegistryBeanPostProcessor">
		<property name="jobConfigurationRegistry" ref="jobConfigurationRegistry"/>
	</bean>

	<bean id="jobConfiguration" parent="simpleJob">
		<property name="steps">
			<list>
				<bean id="step1" parent="simpleStep">
					<constructor-arg>
						<bean
							class="org.springframework.batch.execution.tasklet.RestartableItemProviderTasklet">
							<property name="itemProvider">
								<bean
									class="org.springframework.batch.item.provider.ValidatingItemProvider">
									<property name="inputSource" ref="fileInputTemplate" />
									<property name="validator" ref="fixedValidator" />
								</bean>
							</property>
							<property name="itemProcessor">
								<bean class="org.springframework.batch.sample.item.processor.TradeProcessor">
									<property name="writer" ref="tradeDao" />
								</bean>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				<bean id="step2" parent="simpleStep">
					<constructor-arg>
						<bean
							class="org.springframework.batch.execution.tasklet.RestartableItemProviderTasklet">
							<property name="itemProvider">
								<bean
									class="org.springframework.batch.item.provider.InputSourceItemProvider">
									<property name="inputSource" ref="fileInputTemplate2" />
								</bean>
							</property>
							<property name="itemProcessor">
								<bean class="org.springframework.batch.sample.item.processor.PersonProcessor" />
							</property>
						</bean>
					</constructor-arg>
				</bean>

			</list>
		</property>
	</bean>

	<!-- INFRASTRUCTURE SETUP -->

	<bean id="fileInputTemplate" class="org.springframework.batch.io.file.support.DefaultFlatFileInputSource"
		scope="step" >
		<aop:scoped-proxy />
		<property name="resource" ref="fileLocator" />
		<property name="tokenizer" ref="fixedFileDescriptor" />
		<property name="fieldSetMapper" ref="fieldSetMapper" />
	</bean>

	<bean id="fileInputTemplate2" class="org.springframework.batch.io.file.support.DefaultFlatFileInputSource"
		scope="step">
		<aop:scoped-proxy />
		<property name="resource" ref="fileLocator2" />
		<property name="tokenizer" ref="fixedFileDescriptor2" />
		<property name="fieldSetMapper" ref="fieldSetMapper2" />
<!--		<property name="validator" ref="fixedValidator" />-->
	</bean>

	<bean id="fixedFileDescriptor"
		class="org.springframework.batch.io.file.support.transform.FixedLengthTokenizer">
		<property name="names" value="ISIN,Quantity,price, CUSTOMER" />
		<property name="lengths" value="12, 3, 5, 9" />
	</bean>

	<bean id="fixedFileDescriptor2"
		class="org.springframework.batch.io.file.support.transform.FixedLengthTokenizer">
		<property name="names" value="Title, FirstName, LastName, Age, Address.AddrLine1, children[0].name, children[1].name" />
		<property name="lengths" value="5, 15, 20, 5, 10, 10, 10" />
	</bean>

	<bean id="fixedValidator" class="org.springframework.batch.item.validator.SpringValidator">
		<property name="validator">
			<bean id="tradeValidator" class="org.springmodules.validation.valang.ValangValidator">
				<property name="valang">
					<value>
						<![CDATA[
						{ isin : length(?) < 13 : 'ISIN too long' : 'isin_length' : 12}
					]]>
					</value>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tradeDao" class="org.springframework.batch.sample.dao.JdbcTradeWriter">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		<property name="incrementer">
			<bean parent="incrementerParent">
				<property name="incrementerName" value="TRADE_SEQ" />
			</bean>
		</property>
	</bean>



	<bean id="fileLocator" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg type="java.lang.String"
			value="data/beanWrapperMapperSampleJob/input/20070122.teststream.ImportTradeDataStep.txt" />
	</bean>

	<bean id="fileLocator2" class="org.springframework.core.io.ClassPathResource">
		<constructor-arg type="java.lang.String"
			value="data/beanWrapperMapperSampleJob/input/20070122.teststream.ImportPersonDataStep.txt" />
	</bean>

	<bean id="fieldSetMapper" class="org.springframework.batch.io.file.support.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="trade"/>
	</bean>

	<bean id="fieldSetMapper2" class="org.springframework.batch.io.file.support.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="person"/>
	</bean>

	<bean id="trade" class="org.springframework.batch.sample.domain.Trade" scope="prototype"/>

	<bean id="person" class="org.springframework.batch.sample.domain.Person" scope="prototype"/>

	<bean parent="customEditorConfigurer"/>

	<!-- register the step scope with the application context -->
	<bean class="org.springframework.batch.execution.scope.StepScope" />

</beans>
