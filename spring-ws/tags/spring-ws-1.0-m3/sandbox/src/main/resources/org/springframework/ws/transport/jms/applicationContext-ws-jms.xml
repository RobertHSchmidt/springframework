<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
    <description>
        This application context contains a Spring-WS JMS transport.
    </description>

    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <description>
            The JMS connection factory to use for receiving request JMS message, and sending response messages. Replace
            this bean with a JNDI Pooled connection factory, or change the wrapped "targetConnectionFactory" bean.
        </description>
        <property name="targetConnectionFactory">
            <bean class="org.codehaus.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://localhost:61616"/>
            </bean>
        </property>
    </bean>

    <bean id="listenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <description>
            A Spring 2.0 MessageListenerContainer which listens for incoming messages on the Request Topic. When a
            message is received, the messageListener defined below is invoked.
        </description>
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="pubSubDomain" value="true"/>
        <property name="destinationName" value="org.springframework.ws.samples.airline.RequestTopic"/>
        <property name="messageListener" ref="messageListener"/>
    </bean>

    <bean id="messageListener" class="org.springframework.ws.transport.jms.MessageEndpointMessageListener">
        <description>
            Spring 2.0 SessionAwareMessageListener that creates a SOAP message from the invoming JMS message using
            a messageFactory, and forwards it to the message to the messageDispatcher. Both of these beans are defined
            in applicationContext-ws.xml.
        </description>
        <property name="messageFactory" ref="messageFactory"/>
        <property name="messageReceiver" ref="messageDispatcher"/>
    </bean>

</beans>
