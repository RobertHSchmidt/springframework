<document>
    <properties>
        <title>Home</title>
    </properties>
    <body>
        <h2>What is Spring Web Services?</h2>
        <p>
            Spring Web Services is a product of the <a href="http://www.springframework.org">Spring</a> community
            focused on creating document-driven Web services. Spring Web Services aims to facilitate contract-first
            SOAP service development, allowing for the creation of flexible web services using one of the many ways
            to manipulate XML payloads.
        </p>
        <h2>Key Features</h2>
        <ul>
            <li><b>Makes the Best Practice an Easy Practice:</b> Spring Web Services makes enforcing best practices
                easier. This includes practices such as the WS-I basic profile, Contract-First development, and having
                a loose coupling between contract and implementation.</li>
            <li><b>Powerful mappings:</b> You can distribute incoming XML request to any object, depending on message
                payload, SOAP Action header, or an XPath expression. </li>
            <li><b>XML API support:</b> Incoming XML messages can be handled in standard JAXP APIs such as DOM, SAX,
                and StAX, but also JDOM, dom4j, XOM, or even marshalling technologies.</li>
            <li><b>Flexible XML Marshalling:</b> The Object/XML Mapping module in the Spring Web Services distribution
                supports JAXB 1 and 2, Castor, XMLBeans, JiBX, and XStream. And because it is a separate module,
                you can use it in non-Web services code as well.</li>
            <li><b>Reuses your Spring expertise:</b> Spring-WS uses Spring application contexts for all configuration,
                which should help Spring developers get up-to-speed nice and quickly. Also, the architecture of
                Spring-WS resembles that of Spring-MVC.</li>
            <li><b>Supports WS-Security:</b> WS-Security allows you to sign SOAP messages, encrypt and decrypt them,
                or authenticate against them.</li>
            <li><b>Integrates with Acegi Security:</b> The WS-Security implementation of Spring Web Services provides
                integration with <a href="http://www.springframework.org/spring-security/">Spring Security</a>.
                This means you can use your existing configuration for your SOAP service as well.</li>
            <li><b>Built by Maven:</b> This assists you in effectively reusing the Spring Web Services artifacts
                in your own Maven-based projects.</li>
            <li><b>Apache license.</b> You can confidently use Spring-WS in your project.</li>
        </ul>
  </body>
</document>